package HW.Lesson47.Task3;
/*Напишите метод snakePrint(int n, int col),
который выводит числа "змейкой" от 1 до n:
    1 2 3 4
    8 7 6 5
    9 10 11 12
    ... n
где:
n - максимальное число
col - количество цифр в одной строке
Выводимые числа разделены пробелами.



Используя реализованный метод, напишите программу, которая через
аргументы командной строки получает целочисленные значения n и col,
а затем печатает соответствующего размера змейку.


Проверку на наличие аргументов делать не надо.
Сделайте проверку, что n больше или равно 1, а m больше 0.
В противном случае выведите сообщение об ошибке
и завершите программу.*/
public class Third {

    public static void snakePrint(int n, int col) {
        if (n < 1 || col <= 0) {
            System.out.println("Ошибка");
            return;
        }
/*Вычисляем, сколько строк получится*/
        int rows = (int) Math.ceil((double) n / col);
        /*в цикле проверяем что i(номер строки) меньше общего количества строк*/
        for (int i = 0; i < rows; i++) {
            /*проверяем на четность строку*/
            if (i % 2 == 0) {
                /*цикл с пока j(напечатаная цифра) меньше номера строки помноженого на количество строк*/
                for (int j = i * col + 1; j <= (i + 1) * col && j <= n; j++) {
                    System.out.print(j + " ");
                }
            } else {
                /*цикл с пока j(напечатаная цифра) больше номера строки помноженого на количество строк*/
                for (int j = (i + 1) * col; j > i * col && j <= n; j--) {
                    System.out.print(j + " ");
                }
            }
            System.out.println();
        }
    }
    public static void main(String[] args) {
        int n = Integer.parseInt(args[0]); //максимальное число
        int col = Integer.parseInt(args[1]); //количество цифр в одной строке
        snakePrint(n, col);
    }
}