package HW.Lesson19;

/*1: Создать класс Animal и расширяющие его классы Dog, Cat, Horse
Создать класс Animal и расширяющие его классы Dog, Cat, Horse.

Класс Animal - абстрактный.
Содержит параметры:
- name - кличка животного
- food - название типа пищи
- foodCounter - кол-во запасов пищи
- location - название страны обитания
- counter - все животные имеют внутреннюю связь с сородичами,
            в переменной содержится общее кол-во осыбей данного вида
- health - состояние здоровья животного типа HealthState

Возможные значения HealthState
  HEALTHY,
  UNHEALTHY

Класс Animal содержит методы:
- makeSound - выводит текст, как звучит животное
- eat - выводит текст, что животное ест;
        уменьшает кол-во еды у животного;
        также выводит сколько запасов осталось
- sleep - выводит текст, что животное спит
- toString - вовзращает в виде строки текущую информацию об особи
Формат вывода:
<Кличка>
  Страна обитания: ...
  Состояние здоровья: ...
  Сколько особей: ...

Написать классы Dog, Cat, Horse, которые наследуют Animal
и переопределяют методы makeSound, eat, toString.

Создайте класс Vet. Класс содержит параметр:
- name - имя ветеринара
Класс содержит методы:
- void treatAnimal(Animal animal) - осуществляет прием у ветеринара,вылечивает здоровье животного

Создайте класс Main со статическим метод main, в котором:
- добавьте переменные в классов Dog, Cat, Horse
- выведите внутреннию информацию о каждой особи
- выведите результат makeSound для каждой особи
- вызовите метод eat у некоторых животных
- создайте ветеринара и отведите каждого животного на прием
- вызовите метод sleep у некоторых животных*/
public class Main {
    public static void main(String[] args) {
        Animal[] animals = new Animal[3]; //Создаем массив животных
        for (int i = 0; i <= 2; i++) {
            animals[0] = new Dog("Тузик", "Россия", "Любит кости, но ест что дают",
                    HealthState.HEALTHY, 5);
            animals[1] = new Cat("Кот - матроскин ", "Эфиопия", "обажает воровать рыбку у рыбаков ",
                    HealthState.UNHEALTHY, 3);
            animals[2] = new Horse("Конь-конский", "Дубай", "любит кушать солому ",
                    HealthState.UNHEALTHY, 4);
            System.out.println(animals[i]);
            animals[i].makeSound();
            animals[i].eat();
            animals[i].HealthState();
            Vet treatAnimals = new Vet();
            treatAnimals.treatAnimal(animals[i]);
        }
    }
}